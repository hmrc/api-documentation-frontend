# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "api-documentation-frontend"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"

play.http.filters = "uk.gov.hmrc.apidocumentation.Filters"

play.modules.enabled += "uk.gov.hmrc.apidocumentation.Module"

play.modules.enabled += "uk.gov.hmrc.play.http.metrics.Module"

play.http.errorHandler = "uk.gov.hmrc.apidocumentation.ErrorHandler"

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

platform {
  production {
    api {
      host = api.service.hmrc.gov.uk
    }
    www {
      host = www.tax.service.gov.uk
    }
  }
  sandbox {
    api {
      host = test-api.service.hmrc.gov.uk
    }
    www {
      host = test-www.tax.service.gov.uk
    }
  }
}

play.filters.headers.contentSecurityPolicy = "default-src 'unsafe-inline' 'self' localhost:9032 data: https://www.google-analytics.com https://www.googletagmanager.com; script-src 'unsafe-inline' 'self' localhost:9032 https://www.google-analytics.com data: https://www.googletagmanager.com https://tagmanager.google.com; font-src 'self' localhost:9032 data: https://ssl.gstatic.com https://www.gstatic.com https://fonts.gstatic.com https://fonts.googleapis.com; img-src 'self' https://ssl.gstatic.com https://www.gstatic.com https://www.google-analytics.com https://www.googletagmanager.com data:; style-src 'self' 'unsafe-inline' localhost:9032 https://tagmanager.google.com https://fonts.googleapis.com"
wiremock-port = 11111
wiremock-port = ${?WIREMOCK_PORT}

assets {
  version = "3.11.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

retryCount = 3
retryDelayMilliseconds = 500

Stub {
  cookie.secure = false

  auditing {
    enabled = false
    traceRequests = false
  }

  api-platform.bearer-token = DUMMY

  ramlLoaderUrlRewrite {
    from = "https://developer.service.hmrc.gov.uk"
    to = "http://localhost:9680"
  }

  features {
    groupedDocumentation: true
    ramlPreview: true
    showProductionAvailability: true
    showSandboxAvailability: true
  }

  microservice {
    services {
      api-definition {
        host = localhost
        port = ${wiremock-port}
      }

      developer-frontend {
        host = localhost
        port = ${wiremock-port}
      }

      third-party-developer {
        host = localhost
        port = ${wiremock-port}
      }

      api-platform-microservice {
        host = localhost
        port = ${wiremock-port}
      }
    }
  }
}

Test {
  cookie.secure = false

  auditing {
    enabled = false
    traceRequests = false
  }

  api-platform.bearer-token = DUMMY

  ramlLoaderUrlRewrite {
    from = "https://developer.service.hmrc.gov.uk"
    to = "http://localhost:6001"
  }

  features {
    groupedDocumentation: true
    ramlPreview: true
    showProductionAvailability: true
    showSandboxAvailability: true
  }

  microservice {
    services {
      api-definition {
        host = localhost
        port = ${wiremock-port}
        use-proxy = false
      }

      developer-frontend {
        host = localhost
        port = ${wiremock-port}
      }

      third-party-developer {
        host = localhost
        port = ${wiremock-port}
      }

      api-platform-microservice {
        host = localhost
        port = ${wiremock-port}
      }
    }
  }
}

Dev {
  cookie.secure = false
  contactPath = "http://localhost:9250"

  developer-frontend-url = "http://localhost:9685"

  api-platform.bearer-token = DUMMY

  ramlLoaderUrlRewrite {
    from = "https://developer.service.hmrc.gov.uk"
    to = "http://localhost:9680"
  }

  auditing {
    enabled = false
    traceRequests = false
    consumer {
      baseUri {
        host = "localhost"
        port = 8100
      }
    }
  }

  features {
    groupedDocumentation: true
    ramlPreview: true
  }

  microservice {
    services {
      api-definition {
        host = localhost
        port = 9465
      }

      developer-frontend {
        host = localhost
        port = 9685
      }

      third-party-developer {
        host = localhost
        port = 9615
      }

      api-platform-microservice {
        host = localhost
        port = 9602
      }
    }
  }
}

Prod {
}
